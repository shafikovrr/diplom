---
# sudo apt update

- name: Run the equivalent of "apt-get update" as a separate step
  become: true
  ansible.builtin.apt:
    update_cache: yes

#- name: Upgrade the OS (apt-get dist-upgrade)
#  become: true
#  ansible.builtin.apt:
#    upgrade: dist

- name: Install the zabbix-release_6.4-1 from a repo.zabbix.com
  become: true
  ansible.builtin.apt:
    deb: https://repo.zabbix.com/zabbix/6.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.4-1+ubuntu22.04_all.deb
  tags: izr

- name: Run the equivalent of "apt-get update" as a separate step
  become: true
  ansible.builtin.apt:
    update_cache: yes

- name: Install zabbiz server, frontend, agent (state=present is optional)
  become: true
  ansible.builtin.apt:
    name:
      - zabbix-server-pgsql
      - zabbix-frontend-php
      - php8.1-pgsql
      - zabbix-apache-conf
      - zabbix-sql-scripts
      - zabbix-agent
    state: present

- name: Run the equivalent of "apt-get update" as a separate step
  become: true
  ansible.builtin.apt:
    update_cache: yes

- name: Создание пользователя zabbix
  become: true
  ansible.builtin.shell: su - postgres -c 'psql --command "CREATE USER "{{ db_user }}" WITH PASSWORD '\'"{{ db_password }}"\'';"'

- name: Создание базы данных zabbix (владелец zabbix)
  become: true
  ansible.builtin.shell: su - postgres -c 'psql --command "CREATE DATABASE "{{ db_name }}" OWNER "{{ db_user }}";"'

- name: Импорт начальной схемы базы данных
  become: true
  ansible.builtin.shell: zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | sudo -u "{{ db_user }}" psql "{{ db_name }}"

- name: Импорт пароля базы данных
  become: true
  ansible.builtin.shell: sed -i 's/# DBPassword=/DBPassword={{ db_password }}/g' /etc/zabbix/zabbix_server.conf

# 6. Рестарт и enabled zabbix-server zabbix-agent nginx php8.1-fpm

- name: "Перезапуск и автозапуск zabbix сервера"
  become: true
  service:
    name: zabbix-server
    state: restarted
    enabled: yes

- name: "Перезапуск и автозапуск zabbix агента"
  become: true
  service:
    name: zabbix-agent
    state: restarted
    enabled: yes

- name: "Перезапуск и автозапуск apache2"
  become: true
  service:
    name: apache2
    state: restarted
    enabled: yes

- name: "Добавил первоначальную настройку zabbix после установки zabbix.conf.php"
  become: true
  template:
    src: "zabbix.conf.php.j2"
    dest: "/etc/zabbix/web/zabbix.conf.php"
    owner: www-data
    group: root
    mode: "0600"

- name: "Добавил timezone в zabbix.conf"
  become: true
  template:
    src: "zabbix.conf.j2"
    dest: "/etc/apache2/conf-available/zabbix.conf"
    owner: root
    group: root
    mode: "0777"

- name: "Перезапуск zabbix-server"
  become: true
  service:
    name: zabbix-server
    state: restarted
    enabled: yes
  tags: tt


#2c8849da595ed1932b750410ea8e6f4e9fd0fc5a1daf8ff1ae41a24e73718423

#- name: Set API token
#  ansible.builtin.set_fact:
#    ansible_zabbix_auth_key: 2c8849da595ed1932b750410ea8e6f4e9fd0fc5a1daf8ff1ae41a24e73718423
#  tags: ah

#- name: Add host to Zabbix server
#  vars:
#    ansible_network_os: community.zabbix.zabbix
#    ansible_connection: httpapi
#    ansible_httpapi_port: 80
#    ansible_httpapi_use_ssl: false
#    ansible_zabbix_url_path: 192.168.10.25
#    ansible_user: Admin
#    ansible_httpapi_pass: zabbix
#  zabbix_host:
#    host_name: web_server_1
#    visible_name: web1
#    host_groups: Zabbix
#    link_templates: Zabbix
#    interfaces:
#      - type: 1
#        main: 1
#        useip: 1
#        ip: 192.168.11.21
#        dns: ""
#        port: 80
#    status: enabled
#    state: present
#  tags: ah